package com.test2.kql;
/*
 * 9.4 Write a method to return all subsets of a set.
 */
import java.util.ArrayList;

public class GetSubSets{
	
	ArrayList<ArrayList<Integer>> sets = null;
	
	ArrayList<ArrayList<Integer>> getSub(int[] arr, int n){
		// boundary condition......
		if(n < 0){
			sets = new ArrayList<ArrayList<Integer>>();
			ArrayList<Integer> subset = new ArrayList<Integer>();
			sets.add(subset);
		} else {
			ArrayList<ArrayList<Integer>> sets = getSub(arr, n-1);
			ArrayList<ArrayList<Integer>> moresubsets = new ArrayList<ArrayList<Integer>>();
			for(ArrayList<Integer> subset: sets){
				ArrayList<Integer> newsubset = new ArrayList<Integer>();
				newsubset.addAll(subset);
				newsubset.add(arr[n]);
				moresubsets.add(newsubset);
			}
			sets.addAll(moresubsets);
		}
		return sets;
	} // end method
	
	public static void main(String[] args){
		GetSubSets gss = new GetSubSets();
		int[] arr = {1, 2, 3, 4};
		int n = arr.length - 1;
		ArrayList<ArrayList<Integer>> sets = gss.getSub(arr, n);
		System.out.print(sets);


//		for(ArrayList<Integer> sub :  sets){
//			for(Integer i : sub){
//				System.out.print("{"+i+"} ");
//			}
//			System.out.println();
//		}
	}
}
